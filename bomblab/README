This is an x86-64 bomb for self-study students. 

Phase 1:
Input a string, and compare it with the string at 0x402400. Bomb defused if two strings are equal.

Phase 2:
Input 6 numbers from stdin and compares with 1, 2, 4, 8, 16, 32.

Phase 3:
Input 2 integers. This is a switch statments with cases <= 8 and 1 is default case. If first integer is 1, PC jumps to 0x400fb9, to compare the second argument with 0x137.

Phase 4:
Input 2 integers. The first integer <= 0xe, and the second integer should be 0. Phase 4 calls subroutine func4, return value must be 0. func4 initial value x = 14, every recursive call, x = x/2 -> compare x with first integer -> x = x - 1 -> do recursive call.  If first integer not in [0, 1, 3, 7], recursive call at (400ffe) will be triggered because (400ff9) is not fulfilled. After that eax = eax + 1, meaning func4 returns != 0.

Phase 5:
Input a string of length 6. Each char % 16 represents an offset in string at 0x4024b0("maduiersnfotvbyl"). The offset has to match string at 0x6038c0("flyers").

Phase 6:
Input 6 distinct numbers between 1-6. Form a singly-linked list that is sorted, based on the order of input.

